name: build_publish_snap

on:
   push:
      branches: [main]
      paths-ignore:
         - "**/*.md"
         - "**/.gitignore"
         - "**/.gitattributes"
   pull_request:
      branches: [main]
      paths-ignore:
         - "**/*.md"
         - "**/.gitignore"
         - "**/.gitattributes"

jobs:
   build-and-test:
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v3

         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
              node-version: "18"

         - name: Install dependencies
           run: npm install

         - name: Run tests
           run: npm test

         - name: Bump version and push tag
           run: |
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              npm version patch -m "ci: release v%s [skip ci]"
              git push --follow-tags
           env:
              GITHUB_TOKEN: ${{ secrets.GITACCESSTOKEN }}

         - name: Build electron app
           run: npm run build

         - name: Upload build artifacts
           uses: actions/upload-artifact@v4
           with:
              name: electron-build
              path: dist/
              if-no-files-found: error

   release:
      needs: build-and-test
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'
      steps:
         - uses: actions/checkout@v3

         - name: Download build artifacts
           uses: actions/download-artifact@v4
           with:
              name: electron-build
              path: ./artifacts

         - name: Create GitHub Release
           uses: softprops/action-gh-release@v1
           with:
              files: |
                 ./artifacts/*.snap
                 ./artifacts/*.deb
           env:
              GITHUB_TOKEN: ${{ secrets.GITACCESSTOKEN }}

         - name: Install Snapcraft
           run: sudo snap install snapcraft --classic

         - name: Login to Snapcraft
           env:
              SNAPCRAFT_LOGIN_TOKEN: ${{ secrets.SNAPCRAFT_LOGIN_TOKEN }}
           run: echo "$SNAPCRAFT_LOGIN_TOKEN" | snapcraft login --with -

         - name: Push Snap package to Ubuntu Store
           run: snapcraft push ./artifacts/*.snap --release stable
